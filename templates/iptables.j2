# Completed on Sun May 10 17:08:22 2020
# Generated by iptables-save v1.4.21 on Sun May 10 17:08:22 2020
*filter
:INPUT ACCEPT [0:0]
# :FORWARD ACCEPT [0:0]
# :OUTPUT ACCEPT [831:255519]
# :DOCKER - [0:0]
# :DOCKER-INGRESS - [0:0]
# :DOCKER-ISOLATION-STAGE-1 - [0:0]
# :DOCKER-ISOLATION-STAGE-2 - [0:0]
:DOCKER-USER - [0:0]
:FILTERS - [0:0]
#-F INPUT
#Can't flush input. wipes out docker encrypted overlay rules
#Use ansible task instead to add -I INPUT -j FILTERS ?
#-I INPUT -j FILTERS
# -A INPUT -p udp -m policy --dir in --pol ipsec -m udp --dport 4789 -m u32 --u32 "0x0>>0x16&0x3c@0xc&0xffffff00=0x100600" -j ACCEPT
# -A INPUT -p udp -m udp --dport 4789 -m u32 --u32 "0x0>>0x16&0x3c@0xc&0xffffff00=0x100600" -j DROP
#-A INPUT -j RETURN
# -A FORWARD -j DOCKER-USER
# -A FORWARD -j DOCKER-INGRESS
# -A FORWARD -j DOCKER-ISOLATION-STAGE-1
# -A FORWARD -o docker0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
# -A FORWARD -o docker0 -j DOCKER
# -A FORWARD -i docker0 ! -o docker0 -j ACCEPT
# -A FORWARD -i docker0 -o docker0 -j ACCEPT
# -A FORWARD -o docker_gwbridge -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
# -A FORWARD -o docker_gwbridge -j DOCKER
# -A FORWARD -i docker_gwbridge ! -o docker_gwbridge -j ACCEPT
# -A FORWARD -i docker_gwbridge -o docker_gwbridge -j DROP
# -A DOCKER-INGRESS -p tcp -m tcp --dport 30003 -j ACCEPT
# -A DOCKER-INGRESS -p tcp -m state --state RELATED,ESTABLISHED -m tcp --sport 30003 -j ACCEPT
# -A DOCKER-INGRESS -p tcp -m tcp --dport 30002 -j ACCEPT
# -A DOCKER-INGRESS -p tcp -m state --state RELATED,ESTABLISHED -m tcp --sport 30002 -j ACCEPT
# -A DOCKER-INGRESS -p tcp -m tcp --dport 8666 -j ACCEPT
# -A DOCKER-INGRESS -p tcp -m state --state RELATED,ESTABLISHED -m tcp --sport 8666 -j ACCEPT
# -A DOCKER-INGRESS -p tcp -m tcp --dport 443 -j ACCEPT
# -A DOCKER-INGRESS -p tcp -m state --state RELATED,ESTABLISHED -m tcp --sport 443 -j ACCEPT
# -A DOCKER-INGRESS -p tcp -m tcp --dport 80 -j ACCEPT
# -A DOCKER-INGRESS -p tcp -m state --state RELATED,ESTABLISHED -m tcp --sport 80 -j ACCEPT
# -A DOCKER-INGRESS -p tcp -m tcp --dport 9000 -j ACCEPT
# -A DOCKER-INGRESS -p tcp -m state --state RELATED,ESTABLISHED -m tcp --sport 9000 -j ACCEPT
# -A DOCKER-INGRESS -j RETURN
# -A DOCKER-ISOLATION-STAGE-1 -i docker0 ! -o docker0 -j DOCKER-ISOLATION-STAGE-2
# -A DOCKER-ISOLATION-STAGE-1 -i docker_gwbridge ! -o docker_gwbridge -j DOCKER-ISOLATION-STAGE-2
# -A DOCKER-ISOLATION-STAGE-1 -j RETURN
# -A DOCKER-ISOLATION-STAGE-2 -o docker0 -j DROP
# -A DOCKER-ISOLATION-STAGE-2 -o docker_gwbridge -j DROP
# -A DOCKER-ISOLATION-STAGE-2 -j RETURN
-F DOCKER-USER
-A DOCKER-USER -i {{ iptables_docker_external_network_adapter }} -m set ! --match-set ip_allow src -j DROP
-A DOCKER-USER -j RETURN
-F FILTERS
#Because Docker Swarm encrypted overlay network just appends rules to INPUT. Has to be at top unfortunately
#-A FILTERS -p udp -m policy --dir in --pol ipsec -m udp --dport 4789 -j RETURN
-A FILTERS -p udp -m policy --dir in --pol ipsec -m udp -m set --match-set ip_allow src -m multiport --dports {% for ports in iptables_docker_swarm_ports_allow_udp|sort %}{{ ports }}{% if not loop.last %},{% endif %}{% endfor %} -j RETURN
-A FILTERS -m state --state RELATED,ESTABLISHED -j ACCEPT
-A FILTERS -p icmp -j ACCEPT
-A FILTERS -i lo -j ACCEPT
-A FILTERS -p udp -m udp --sport 53 -j ACCEPT
#-A FILTERS -p tcp -m tcp -m multiport --dports 22 -j ACCEPT
-A FILTERS -i {{ iptables_docker_swarm_network_adapter }} -p tcp -m tcp -m set --match-set ip_allow src -m multiport --dports {% for ports in iptables_docker_swarm_ports_allow_tcp|sort %}{{ ports }}{% if not loop.last %},{% endif %}{% endfor %} -j ACCEPT
-A FILTERS -i {{ iptables_docker_swarm_network_adapter }} -p udp -m udp -m set --match-set ip_allow src -m multiport --dports {% for ports in iptables_docker_swarm_ports_allow_udp|sort %}{{ ports }}{% if not loop.last %},{% endif %}{% endfor %} -j ACCEPT
#-A FILTERS -p tcp -m tcp -m multiport --dports 2376,2377,7946 -j ACCEPT
{% if iptables_docker_global_ports_allow_tcp is defined and iptables_docker_global_ports_allow_tcp %}
-A FILTERS -p tcp -m tcp -m multiport --dports {% for ports in iptables_docker_global_ports_allow_tcp|sort %}{{ ports }}{% if not loop.last %},{% endif %}{% endfor %} -j ACCEPT
{% endif %}
{% if iptables_docker_global_ports_allow_udp is defined and iptables_docker_global_ports_allow_udp %}
#-A FILTERS -p udp -m udp -m multiport --dports 7946,4789 -j ACCEPT
-A FILTERS -p udp -m udp -m multiport --dports {% for ports in iptables_docker_global_ports_allow_udp|sort %}{{ ports }}{% if not loop.last %},{% endif %}{% endfor %} -j ACCEPT
{% endif %}
#-A FILTERS -s 172.18.0.0/16 -j ACCEPT
{% for ipaddress in iptables_docker_swarm_ips -%}
-A FILTERS -s {{ ipaddress }} -j ACCEPT
{% endfor %}
-A FILTERS -j DROP
COMMIT
# Completed on Sun May 10 17:08:22 2020
# Generated by iptables-save v1.4.21 on Sun May 10 17:08:22 2020
# Actually Generated and deployed with Ansible
